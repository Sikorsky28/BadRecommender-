package com.soloway.BadRecommender.service;

import com.soloway.BadRecommender.model.Question;
import com.soloway.BadRecommender.model.UserAnswer;

import com.soloway.BadRecommender.repository.QuestionRepository;
import org.springframework.stereotype.Service;

import java.util.*;


@Service
public class RecommendationService {

  private final QuestionRepository questionRepository;
  private final RecommendationCalculationService calculationService;

  public RecommendationService(QuestionRepository questionRepository, 
                             RecommendationCalculationService calculationService) {
    this.questionRepository = questionRepository;
    this.calculationService = calculationService;
  }



  // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–µ (–±–µ–∑ —É—á–µ—Ç–∞ –ø–æ–ª–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞)
  public List<Question> getQuestionsByTopic(String topic) {
    System.out.println("üîç –ó–∞–ø—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ç–µ–º–µ:");
    System.out.println("   –¢–µ–º–∞: " + topic);

    List<Question> allQuestions = new ArrayList<>();

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
    List<Question> topicQuestions = new ArrayList<>();
    switch (topic) {
        case "iron":
            topicQuestions = createIronQuestions();
            break;
        case "energy":
            topicQuestions = createEnergyQuestions();
            break;
        case "sleep":
            topicQuestions = createSleepQuestions();
            break;
        case "weight":
            topicQuestions = createWeightQuestions();
            break;
        case "skin":
            topicQuestions = createSkinQuestions();
            break;
        case "digestion":
            topicQuestions = createDigestionQuestions();
            break;
        case "joints":
            topicQuestions = createJointsQuestions();
            break;
        case "immunity":
            topicQuestions = createImmunityQuestions();
            break;
        case "heart":
            topicQuestions = createHeartQuestions();
            break;
        case "thyroid":
            topicQuestions = createThyroidQuestions();
            break;
        case "female":
            topicQuestions = createFemaleQuestions();
            break;
        case "menopause":
            topicQuestions = createMenopauseQuestions();
            break;
        case "male":
            topicQuestions = createMaleQuestions();
            break;
        default:
            System.out.println("   ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–∞: " + topic);
            return new ArrayList<>();
    }

    allQuestions.addAll(topicQuestions);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º
    List<Question> generalQuestions = createGeneralQuestions();
    allQuestions.addAll(generalQuestions);

    System.out.println("   –ù–∞–π–¥–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: " + allQuestions.size());
    System.out.println("   - –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö: " + topicQuestions.size());
    System.out.println("   - –û–±—â–∏—Ö: " + generalQuestions.size());

    return allQuestions;
  }

  // üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –æ—Ç–≤–µ—Ç–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
  public List<String> generateRecommendations(List<UserAnswer> answers) {
    // –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ª–æ–≥–∏–∫–∞: —Å–æ–±–∏—Ä–∞–µ–º –∫–ª—é—á–∏ –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª–∏ "–î–∞"
    List<String> recommendations = new ArrayList<>();

    for (UserAnswer answer : answers) {
      if ("–î–∞".equalsIgnoreCase(answer.getAnswer())) {
        recommendations.add("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ: " + answer.getQuestionId());
      }
    }

    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–±—Ä–∞–ª–æ—Å—å
    if (recommendations.isEmpty()) {
      recommendations.add("–ù–µ—Ç —è–≤–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏—ë–º –±–∞–∑–æ–≤—ã—Ö –¥–æ–±–∞–≤–æ–∫.");
    }

    return recommendations;
  }

  // üîπ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å –±–∞–ª–ª–∞–º–∏ (–±–µ–∑ —É—á–µ—Ç–∞ –ø–æ–ª–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞)
  public RecommendationCalculationService.RecommendationResult generateAdvancedRecommendations(
      List<UserAnswer> answers, String selectedTopic) {
    
    return calculationService.calculateRecommendations(answers, selectedTopic);
  }

  // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ (—Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó)
  public List<String> getAvailableTopics() {
    return Arrays.asList(
      "energy",           // –ë–æ–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è
      "sleep",            // –ö—Ä–µ–ø–∫–∏–π —Å–æ–Ω, –º–µ–Ω—å—à–µ —Å—Ç—Ä–µ—Å—Å–∞
      "weight",           // –ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞ –∏ –∞–ø–ø–µ—Ç–∏—Ç–∞
      "skin",             // –ß–∏—Å—Ç–∞—è –∫–æ–∂–∞, –∫—Ä–µ–ø–∫–∏–µ –≤–æ–ª–æ—Å—ã
      "digestion",        // –ö–æ–º—Ñ–æ—Ä—Ç –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è
      "joints",           // –ü–æ–¥–≤–∏–∂–Ω—ã–µ —Å—É—Å—Ç–∞–≤—ã, –∫—Ä–µ–ø–∫–∏–µ –∫–æ—Å—Ç–∏
      "immunity",         // –°–∏–ª—å–Ω—ã–π –∏–º–º—É–Ω–∏—Ç–µ—Ç
      "heart",            // –ó–¥–æ—Ä–æ–≤–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ —Å–æ—Å—É–¥—ã
      "thyroid",          // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã
      "cycle",            // –†–µ–≥—É–ª—è—Ä–Ω—ã–π —Ü–∏–∫–ª, –º—è–≥–∫–∏–π –ü–ú–°
      "menopause",        // –ú–µ–Ω–æ–ø–∞—É–∑–∞ –±–µ–∑ –ø—Ä–∏–ª–∏–≤–æ–≤
      "prostate",         // –ú—É–∂—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø—Ä–æ—Å—Ç–∞—Ç–∞
      "iron"              // –ü–æ–¥–Ω—è—Ç—å –≥–µ–º–æ–≥–ª–æ–±–∏–Ω
    );
  }

  // üîπ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ–≥–∞–º
  public List<String> getRecommendationsByTags(Set<String> tags) {
    // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Ç–µ–≥–∞–º
    List<String> recommendations = new ArrayList<>();
    
    if (tags.contains("energy")) {
      recommendations.add("Energy - –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ –±–æ–¥—Ä–æ—Å—Ç–∏");
      recommendations.add("Coenzyme Q10 - –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–º–µ–Ω–∞");
    }
    
    if (tags.contains("sleep")) {
      recommendations.add("Magnesium B6 - –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–Ω–∞");
      recommendations.add("5-HTP 100 –º–≥ - –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–Ω–∞");
    }
    
    if (tags.contains("weight")) {
              // Berberine + Betulin —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã - –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è
      recommendations.add("Appetite Control - –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∞–ø–ø–µ—Ç–∏—Ç–∞");
    }
    
    if (recommendations.isEmpty()) {
      recommendations.add("–ù–µ—Ç —è–≤–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏—ë–º –±–∞–∑–æ–≤—ã—Ö –¥–æ–±–∞–≤–æ–∫.");
    }
    
    return recommendations;
  }

  // üîπ –°–æ–∑–¥–∞—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "iron" (–≥–µ–º–æ–≥–ª–æ–±–∏–Ω)
  private List<Question> createIronQuestions() {
    List<Question> questions = new ArrayList<>();
    
    // –í–æ–ø—Ä–æ—Å 1: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Ä–∞—á–∞
    Question question1 = new Question();
    question1.setId("iron_deficiency_doctor");
    question1.setText("–°–æ–æ–±—â–∞–ª –ª–∏ –≤–∞–º –≤—Ä–∞—á –æ –Ω–∏–∑–∫–∏—Ö –∑–∞–ø–∞—Å–∞—Ö –∂–µ–ª–µ–∑–∞ –∏–ª–∏ —Å–Ω–∏–∂–µ–Ω–∏–∏ –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question1);
    
    // –í–æ–ø—Ä–æ—Å 2: –°–∏–º–ø—Ç–æ–º—ã —Å–ª–∞–±–æ—Å—Ç–∏
    Question question2 = new Question();
    question2.setId("weakness_fatigue");
    question2.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ —É –≤–∞—Å —Å–ª–∞–±–æ—Å—Ç—å, –±–ª–µ–¥–Ω–æ—Å—Ç—å, —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å –ø—Ä–∏ –ø–æ–¥—ä—ë–º–µ –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "—Å–∏–ª—å–Ω–æ"));
    questions.add(question2);
    
    // –í–æ–ø—Ä–æ—Å 3: –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏—è
    Question question3 = new Question();
    question3.setId("dizziness_shortness");
    question3.setText("–í–æ–∑–Ω–∏–∫–∞—é—Ç –ª–∏ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –≤—Å—Ç–∞–≤–∞–Ω–∏–∏ –∏–ª–∏ –æ–¥—ã—à–∫–∞ –ø—Ä–∏ –ª—ë–≥–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question3);
    
    // –í–æ–ø—Ä–æ—Å 4: –ö—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä–∏
    Question question4 = new Question();
    question4.setId("blood_loss");
    question4.setText("–ë—ã–ª–∏ –ª–∏ –Ω–µ–¥–∞–≤–Ω–æ –¥–æ–Ω–æ—Ä—Å—Ç–≤–∞ –∏–ª–∏ –∫—Ä–æ–≤–æ–ø–æ—Ç–µ—Ä–∏ (—É –∂–µ–Ω—â–∏–Ω ‚Äî –æ–±–∏–ª—å–Ω—ã–µ –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏)?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–±—ã–ª–æ", "–¥–∞, —Ä–µ–≥—É–ª—è—Ä–Ω–æ"));
    questions.add(question4);
    
    // –í–æ–ø—Ä–æ—Å 5: –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å—Ç–≤–æ/–≤–µ–≥–∞–Ω—Å—Ç–≤–æ
    Question question5 = new Question();
    question5.setId("vegetarian_vegan");
    question5.setText("–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ—Å—å –ª–∏ –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–≥–æ/–≤–µ–≥–∞–Ω—Å–∫–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞"));
    questions.add(question5);
    
    // –í–æ–ø—Ä–æ—Å 6: –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ñ–ö–¢
    Question question6 = new Question();
    question6.setId("gut_sensitivity");
    question6.setText("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ñ–ö–¢ (—Ç–æ—à–Ω–æ—Ç–∞, –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç, –≥–∞—Å—Ç—Ä–∏—Ç, –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –¥–æ–±–∞–≤–æ–∫)?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–≤—ã—Ä–∞–∂–µ–Ω–Ω–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'iron': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ë–æ–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è"
  private List<Question> createEnergyQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("morning_energy");
    question1.setText("–°–ª–æ–∂–Ω–æ –ª–∏ –≤–∞–º –ø–æ —É—Ç—Ä–∞–º –±—ã—Å—Ç—Ä–æ \"–ø—Ä–∏–π—Ç–∏ –≤ —Å–µ–±—è\", –≤–∫–ª—é—á–∞—Ç—å—Å—è –≤ –¥–µ–ª–∞?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("afternoon_crash");
    question2.setText("–ë—ã–≤–∞–µ—Ç –ª–∏, —á—Ç–æ –ø–æ—Å–ª–µ —É–≥–ª–µ–≤–æ–¥–Ω–æ–≥–æ –æ–±–µ–¥–∞ –∫–ª–æ–Ω–∏—Ç –≤ —Å–æ–Ω –∏ –ø–∞–¥–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("post_infection_fatigue");
    question3.setText("–°–æ—Ö—Ä–∞–Ω—è–ª–∞—Å—å –ª–∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å –±–æ–ª–µ–µ 4 –Ω–µ–¥–µ–ª—å –ø–æ—Å–ª–µ –∏–Ω—Ñ–µ–∫—Ü–∏–∏ (–Ω–∞–ø—Ä., COVID-19)?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–±—ã–ª–æ, –Ω–æ –ø—Ä–æ—à–ª–æ", "–¥–∞, –¥–µ—Ä–∂–∏—Ç—Å—è"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("exercise_fatigue");
    question4.setText("–°–ª—É—á–∞–µ—Ç—Å—è –ª–∏, —á—Ç–æ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –±—ã—Å—Ç—Ä–æ —É—Å—Ç–∞—ë—Ç–µ –∏–ª–∏ —Ç—è–∂–µ–ª–æ –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("iron_anemia_doctor");
    question5.setText("–°–æ–æ–±—â–∞–ª –ª–∏ –≤—Ä–∞—á –æ –Ω–∏–∑–∫–∏—Ö –∑–∞–ø–∞—Å–∞—Ö –∂–µ–ª–µ–∑–∞ –∏–ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞—Ö –∞–Ω–µ–º–∏–∏?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ –∑–Ω–∞—é", "–¥–∞"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("caffeine_sensitivity");
    question6.setText("–ó–∞–º–µ—á–∞–µ—Ç–µ –ª–∏ —É—Å–∏–ª–µ–Ω–∏–µ —Ç—Ä–µ–≤–æ–≥–∏ –∏–ª–∏ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ—Ñ–µ/—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'energy': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ö—Ä–µ–ø–∫–∏–π —Å–æ–Ω, –º–µ–Ω—å—à–µ —Å—Ç—Ä–µ—Å—Å–∞"
  private List<Question> createSleepQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("sleep_onset");
    question1.setText("–ß–∞—Å—Ç–æ –ª–∏ –≤—ã –∑–∞—Å—ã–ø–∞–µ—Ç–µ –±–æ–ª–µ–µ 30 –º–∏–Ω—É—Ç?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("night_awakenings");
    question2.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ —á—Ç–æ –≤—ã –ø—Ä–æ—Å—ã–ø–∞–µ—Ç–µ—Å—å –Ω–æ—á—å—é —á–∞—â–µ 1 —Ä–∞–∑–∞?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("chronic_stress");
    question3.setText("–ò—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ –ª–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ç—Ä–µ—Å—Å (—Ä–∞–±–æ—Ç–∞/–ª–∏—á–Ω–æ–µ)?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("low_motivation");
    question4.setText("–ó–∞–º–µ—á–∞–µ—Ç–µ –ª–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ —Å–Ω–∏–∂–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏/\"–Ω–∏—á–µ–≥–æ –Ω–µ —Ö–æ—á–µ—Ç—Å—è\"?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("screen_before_bed");
    question5.setText("–ü–æ–ª—å–∑—É–µ—Ç–µ—Å—å –ª–∏ –≤—ã —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º / –ø–ª–∞–Ω—à–µ—Ç–æ–º / –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –¥–æ —Å–Ω–∞?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("stress_impact");
    question6.setText("–ë—ã–ª–∏ –ª–∏ —É –≤–∞—Å –ø–µ—Ä–∏–æ–¥—ã –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞, –æ—Ç—Ä–∞–∑–∏–≤—à–∏–µ—Å—è –Ω–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "—Å–∫–æ—Ä–µ–µ –¥–∞", "–¥–∞"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'sleep': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞ –∏ –∞–ø–ø–µ—Ç–∏—Ç–∞"
  private List<Question> createWeightQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("portion_control");
    question1.setText("–°–ª–æ–∂–Ω–æ –ª–∏ –≤–∞–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –ø–æ—Ä—Ü–∏–∏, –±—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–µ–¥–∞–Ω–∏–µ?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("night_snacking");
    question2.setText("–°–ª—É—á–∞—é—Ç—Å—è –ª–∏ –Ω–æ—á–Ω—ã–µ –ø–µ—Ä–µ–∫—É—Å—ã –∏–ª–∏ \"–∑–∞–µ–¥–∞–Ω–∏–µ\" —Å—Ç—Ä–µ—Å—Å–∞?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("late_dinner");
    question3.setText("–ß–∞—Å—Ç–æ –ª–∏ —É–∂–∏–Ω –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 2 —á–∞—Å–∞ –¥–æ —Å–Ω–∞?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("skip_breakfast");
    question4.setText("–ë—ã–≤–∞–µ—Ç –ª–∏, —á—Ç–æ –≤—ã –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç–µ –∑–∞–≤—Ç—Ä–∞–∫ 3 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("bloating_sugar_cravings");
    question5.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ —Å–æ—á–µ—Ç–∞–Ω–∏–µ: –≤–∑–¥—É—Ç–∏–µ/—Ç—è–∂–µ—Å—Ç—å –∏ –≤—ã—Ä–∞–∂–µ–Ω–Ω–∞—è —Ç—è–≥–∞ –∫ —Å–ª–∞–¥–∫–æ–º—É?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("waist_increase");
    question6.setText("–ï—Å—Ç—å –ª–∏ —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –æ–±—ä—ë–º–∞ —Ç–∞–ª–∏–∏?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–≤—ã—Ä–∞–∂–µ–Ω–Ω–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'weight': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ß–∏—Å—Ç–∞—è –∫–æ–∂–∞, –∫—Ä–µ–ø–∫–∏–µ –≤–æ–ª–æ—Å—ã"
  private List<Question> createSkinQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("deep_acne");
    question1.setText("–í–æ–∑–Ω–∏–∫–∞—é—Ç –ª–∏ –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–µ –≥–ª—É–±–æ–∫–∏–µ –≤—ã—Å—ã–ø–∞–Ω–∏—è (–ø–æ–¥–∫–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã)?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("acne_marks");
    question2.setText("–î–æ–ª–≥–æ –ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—è—Ç–Ω–∞ –ø–æ—Å–ª–µ –≤—ã—Å—ã–ø–∞–Ω–∏–π, –Ω–µ—Ä–æ–≤–Ω—ã–π —Ç–æ–Ω?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("wrinkles_elasticity");
    question3.setText("–ó–∞–º–µ—á–∞–µ—Ç–µ –ª–∏ –º–µ–ª–∫–∏–µ –º–æ—Ä—â–∏–Ω—ã –∏–ª–∏ —Å–Ω–∏–∂–µ–Ω–∏–µ —É–ø—Ä—É–≥–æ—Å—Ç–∏?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–≤—ã—Ä–∞–∂–µ–Ω–Ω–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("hair_loss");
    question4.setText("–û—Ç–º–µ—á–∞–µ—Ç–µ –ª–∏ —É—Å–∏–ª–µ–Ω–Ω–æ–µ –≤—ã–ø–∞–¥–µ–Ω–∏–µ –≤–æ–ª–æ—Å?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–∑–∞–º–µ—Ç–Ω–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("scalp_issues");
    question5.setText("–ë–µ—Å–ø–æ–∫–æ–∏—Ç –ª–∏ –ø–µ—Ä—Ö–æ—Ç—å/–∑—É–¥ –∫–æ–∂–∏ –≥–æ–ª–æ–≤—ã –∏–ª–∏ –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –∂–∏—Ä–Ω–æ—Å—Ç—å –∫–æ—Ä–Ω–µ–π?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("skin_irritation");
    question6.setText("–ß–∞—Å—Ç–æ –ª–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–∂–∏ /—Å–µ–±–æ–¥–µ—Ä–º–∞—Ç–∏—Ç?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'skin': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ö–æ–º—Ñ–æ—Ä—Ç –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è"
  private List<Question> createDigestionQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("recent_antibiotics");
    question1.setText("–ü—Ä–∏–Ω–∏–º–∞–ª–∏ –ª–∏ –≤—ã –∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –ø–æ–º–Ω—é"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("dairy_intolerance");
    question2.setText("–ó–∞–º–µ—á–∞–µ—Ç–µ –ª–∏, —á—Ç–æ –º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —É—Ö—É–¥—à–∞—é—Ç —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ (–≤–æ–∑–Ω–∏–∫–∞–µ—Ç –≤–∑–¥—É—Ç–∏–µ)?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("post_meal_discomfort");
    question3.setText("–í–æ–∑–Ω–∏–∫–∞—é—Ç –ª–∏ —Ç—è–∂–µ—Å—Ç—å –∏–ª–∏ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –ø–æ—Å–ª–µ –µ–¥—ã?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("ibs_diagnosis");
    question4.setText("–°–æ–æ–±—â–∞–ª –ª–∏ –≤—Ä–∞—á –æ —Å–∏–Ω–¥—Ä–æ–º–µ —Ä–∞–∑–¥—Ä–∞–∂—ë–Ω–Ω–æ–≥–æ –∫–∏—à–µ—á–Ω–∏–∫–∞ –∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ–º –≤–æ—Å–ø–∞–ª–µ–Ω–∏–∏?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("stress_gut_symptoms");
    question5.setText("–£—Å–∏–ª–∏–≤–∞—é—Ç—Å—è –ª–∏ –ñ–ö–¢-—Å–∏–º–ø—Ç–æ–º—ã –Ω–∞ —Ñ–æ–Ω–µ —Å—Ç—Ä–µ—Å—Å–∞?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("bloating_sweet_cravings");
    question6.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤–∑–¥—É—Ç–∏–µ –∏ –≤—ã—Ä–∞–∂–µ–Ω–Ω–∞—è —Ç—è–≥–∞ –∫ —Å–ª–∞–¥–∫–æ–º—É?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'digestion': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ü–æ–¥–≤–∏–∂–Ω—ã–µ —Å—É—Å—Ç–∞–≤—ã, –∫—Ä–µ–ø–∫–∏–µ –∫–æ—Å—Ç–∏"
  private List<Question> createJointsQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("regular_exercise");
    question1.setText("–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –±–µ–≥–æ–≤—ã–µ/–ø—Ä—ã–∂–∫–æ–≤—ã–µ/—Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é", "3 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("recent_injuries");
    question2.setText("–ë—ã–ª–∏ –ª–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥ —Ç—Ä–∞–≤–º—ã –∏–ª–∏ —Ä–∞—Å—Ç—è–∂–µ–Ω–∏—è –∫–æ–ª–µ–Ω/–≥–æ–ª–µ–Ω–æ—Å—Ç–æ–ø–∞?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–ø–æ–≤—Ç–æ—Ä–Ω—ã–µ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("joint_dryness");
    question3.setText("–ï—Å—Ç—å –ª–∏ –æ—â—É—â–µ–Ω–∏–µ \"—Å—É—Ö–æ—Å—Ç–∏\" –≤ —Å—É—Å—Ç–∞–≤–∞—Ö (—á–∞—Å—Ç–æ –≤–º–µ—Å—Ç–µ —Å —Å—É—Ö–æ–π –∫–æ–∂–µ–π)?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–≤—ã—Ä–∞–∂–µ–Ω–Ω–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("age_category");
    question4.setText("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç?");
    question4.setOptions(Arrays.asList("–¥–æ 35 –ª–µ—Ç", "35‚Äì49 –ª–µ—Ç", "50+ –ª–µ—Ç"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("knee_pain");
    question5.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ –±–æ–ª—å –≤ –∫–æ–ª–µ–Ω—è—Ö –∫ –≤–µ—á–µ—Ä—É (–Ω–∞ —Ñ–æ–Ω–µ –Ω–∞–≥—Ä—É–∑–∫–∏/–º–∞—Å—Å—ã —Ç–µ–ª–∞)?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("bone_density_risk");
    question6.setText("–£–∫–∞–∑—ã–≤–∞–ª –ª–∏ –≤—Ä–∞—á –Ω–∞ —Ä–∏—Å–∫–∏ —Å–Ω–∏–∂–µ–Ω–∏—è –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∫–æ—Å—Ç–µ–π?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'joints': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–°–∏–ª—å–Ω—ã–π –∏–º–º—É–Ω–∏—Ç–µ—Ç"
  private List<Question> createImmunityQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("social_contact");
    question1.setText("–ß–∞—Å—Ç–æ –ª–∏ –≤—ã –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä—É–µ—Ç–µ —Å –¥–µ—Ç—å–º–∏ –∏–ª–∏ –±–æ–ª—å—à–∏–º –∫—Ä—É–≥–æ–º –ª—é–¥–µ–π?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("prolonged_colds");
    question2.setText("–¢—è–Ω—É—Ç—Å—è –ª–∏ –ø—Ä–æ—Å—Ç—É–¥—ã –¥–æ–ª—å—à–µ 10 –¥–Ω–µ–π?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("frequent_infections");
    question3.setText("–°–ª—É—á–∞–µ—Ç—Å—è –ª–∏, —á—Ç–æ –ø—Ä–æ—Å—Ç—É–¥—ã –∏–¥—É—Ç –æ–¥–Ω–∞ –∑–∞ –¥—Ä—É–≥–æ–π (–≤–∫–ª—é—á–∞—è –≥–µ—Ä–ø–µ—Å)?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("cold_extremities");
    question4.setText("–ë—ã–≤–∞–µ—Ç –ª–∏, —á—Ç–æ –º—ë—Ä–∑–Ω—É—Ç –∫–∏—Å—Ç–∏/—Å—Ç–æ–ø—ã –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏—è?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("autoimmune_thyroid");
    question5.setText("–£–∫–∞–∑—ã–≤–∞–ª –ª–∏ –≤—Ä–∞—á (—É –≤–∞—Å/–≤ —Å–µ–º—å–µ) –Ω–∞ –∞—É—Ç–æ–∏–º–º—É–Ω–Ω—É—é —â–∏—Ç–æ–≤–∏–¥–∫—É/—É–∑–ª—ã?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("sleep_deprivation");
    question6.setText("–ß–∞—Å—Ç–æ –ª–∏ –≤—ã —Å–ø–∏—Ç–µ –º–µ–Ω–µ–µ 6 —á–∞—Å–æ–≤?");
    question6.setOptions(Arrays.asList("–ø–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞", "1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é", "3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é –∏–ª–∏ —á–∞—â–µ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'immunity': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ó–¥–æ—Ä–æ–≤–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ —Å–æ—Å—É–¥—ã"
  private List<Question> createHeartQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("family_cardiovascular");
    question1.setText("–ë—ã–ª–∏ —É –≤–∞—Å –∏–ª–∏ –≤–∞—à–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("exercise_fatigue_heart");
    question2.setText("–í–æ–∑–Ω–∏–∫–∞–µ—Ç –ª–∏ —É –≤–∞—Å –ø—Ä–∏ –Ω–∞–≥—Ä—É–∑–∫–µ –±—ã—Å—Ç—Ä–∞—è —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å –∏–ª–∏ –æ–¥—ã—à–∫–∞?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("homocysteine_elevated");
    question3.setText("–ë—ã–ª–æ –ª–∏ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –≤ –≤–∞—à–∏—Ö –∞–Ω–∞–ª–∏–∑–∞—Ö –ø–æ–≤—ã—à–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ–º–æ—Ü–∏—Å—Ç–µ–∏–Ω–∞?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("inflammation_joints");
    question4.setText("–ë—ã–≤–∞–µ—Ç –ª–∏, —á—Ç–æ —Å—É—Å—Ç–∞–≤—ã –±–æ–ª—è—Ç –∏–º–µ–Ω–Ω–æ –∏–∑-–∑–∞ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è, –∏–ª–∏ –≤–∞–º –≥–æ–≤–æ—Ä–∏–ª–∏ –æ –ø–æ–≤—ã—à–µ–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è—Ö –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è –≤ –∞–Ω–∞–ª–∏–∑–∞—Ö?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("sedentary_lifestyle");
    question5.setText("–ü—Ä–æ–≤–æ–¥–∏—Ç–µ –ª–∏ –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –¥–Ω—è —Å–∏–¥—è (–±–æ–ª—å—à–µ 8 —á–∞—Å–æ–≤)?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "–¥–∞"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("circulation_issues");
    question6.setText("–ë—ã–≤–∞—é—Ç –ª–∏ —É –≤–∞—Å —Ö–æ–ª–æ–¥–Ω—ã–µ –∫–∏—Å—Ç–∏/—Å—Ç–æ–ø—ã –∏ —ç–ø–∏–∑–æ–¥—ã –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏—è?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'heart': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã"
  private List<Question> createThyroidQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("cold_sensitivity");
    question1.setText("–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –ª–∏ –≤—ã –∫ —Ö–æ–ª–æ–¥—É, —Å–ª–æ–∂–Ω–æ –ª–∏ –≤–∞–º \"–≤–∫–ª—é—á–∞—Ç—å—Å—è\" –ø–æ —É—Ç—Ä–∞–º?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("tsh_elevated");
    question2.setText("–ì–æ–≤–æ—Ä–∏–ª –ª–∏ –≤—Ä–∞—á, —á—Ç–æ —É –≤–∞—Å –ø–æ–≤—ã—à–µ–Ω –¢–¢–ì (–≥–æ—Ä–º–æ–Ω —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã), –∏–ª–∏ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ L-—Ç–∏—Ä–æ–∫—Å–∏–Ω/–ª–µ–≤–æ—Ç–∏—Ä–æ–∫—Å–∏–Ω?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ –∑–Ω–∞—é", "–¥–∞"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("autoimmune_thyroid_specific");
    question3.setText("–£–∫–∞–∑—ã–≤–∞–ª –ª–∏ –≤—Ä–∞—á –Ω–∞ –∞—É—Ç–æ–∏–º–º—É–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("constipation");
    question4.setText("–ë—ã–≤–∞—é—Ç –ª–∏ —É –≤–∞—Å –∑–∞–ø–æ—Ä—ã?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("voice_neck_discomfort");
    question5.setText("–°–ª—É—á–∞–µ—Ç—Å—è –ª–∏ —É –≤–∞—Å –æ—Ö—Ä–∏–ø–ª–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞ –∏–ª–∏ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ —à–µ–∏?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("evening_energy_drop");
    question6.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ —Å–Ω–∏–∂–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∫ –≤–µ—á–µ—Ä—É?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'thyroid': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–†–µ–≥—É–ª—è—Ä–Ω—ã–π —Ü–∏–∫–ª, –º—è–≥–∫–∏–π –ü–ú–°"
  private List<Question> createFemaleQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("irregular_cycle");
    question1.setText("–ë—ã–≤–∞–µ—Ç –ª–∏, —á—Ç–æ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª –¥–ª–∏–Ω–Ω–µ–µ 35 –¥–Ω–µ–π –∏–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("pms_symptoms");
    question2.setText("–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã—Ä–∞–∂–µ–Ω—ã –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –ü–ú–° (–æ—Ç—ë–∫–∏, –Ω–∞–≥—Ä—É–±–∞–Ω–∏–µ –≥—Ä—É–¥–∏, –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è)?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "—É–º–µ—Ä–µ–Ω–Ω–æ", "—Å–∏–ª—å–Ω–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("premenstrual_acne");
    question3.setText("–ü–µ—Ä–µ–¥ –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–µ–π —É—Å–∏–ª–∏–≤–∞—é—Ç—Å—è –≤—ã—Å—ã–ø–∞–Ω–∏—è –∏–ª–∏ –∂–∏—Ä–Ω–æ—Å—Ç—å –∫–æ–∂–∏?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("menstrual_pain");
    question4.setText("–ë—ã–≤–∞—é—Ç –ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–µ —Å–ø–∞–∑–º—ã/–±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å –≤–æ –≤—Ä–µ–º—è –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("heavy_periods");
    question5.setText("–ë—ã–≤–∞—é—Ç –ª–∏ –æ–±–∏–ª—å–Ω—ã–µ –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏ —Å–æ —Å–≥—É—Å—Ç–∫–∞–º–∏?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("pregnancy_planning");
    question6.setText("–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ª–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å –∏ –µ—Å—Ç—å –ª–∏ —Å–æ–º–Ω–µ–Ω–∏—è –≤ –æ–≤—É–ª—è—Ü–∏–∏?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'female': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ú–µ–Ω–æ–ø–∞—É–∑–∞ –±–µ–∑ –ø—Ä–∏–ª–∏–≤–æ–≤"
  private List<Question> createMenopauseQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("hot_flashes_frequent");
    question1.setText("–°–ª—É—á–∞—é—Ç—Å—è –ª–∏ –ø—Ä–∏–ª–∏–≤—ã 4 –∏ –±–æ–ª–µ–µ —Ä–∞–∑ –≤ –¥–µ–Ω—å?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("night_hot_flashes");
    question2.setText("–ú–µ—à–∞—é—Ç –ª–∏ –Ω–æ—á–Ω—ã–µ –ø—Ä–∏–ª–∏–≤—ã —Å–Ω—É?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("mood_changes_menopause");
    question3.setText("–°—Ç–∞–ª–∏ –ª–∏ —á–∞—â–µ –ø—Ä–æ—è–≤–ª—è—Ç—å—Å—è —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "—Å–∏–ª—å–Ω–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("joint_pain_menopause");
    question4.setText("–£—Å–∏–ª–∏–ª–∏—Å—å –ª–∏ –±–æ–ª–∏ –≤ —Å—É—Å—Ç–∞–≤–∞—Ö –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è –º–µ–Ω–æ–ø–∞—É–∑—ã?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–≤—ã—Ä–∞–∂–µ–Ω–Ω–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("weight_gain_menopause");
    question5.setText("–ï—Å—Ç—å –ª–∏ —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –æ–±—ä—ë–º–∞ —Ç–∞–ª–∏–∏ –ø–æ—Å–ª–µ –º–µ–Ω–æ–ø–∞—É–∑—ã?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–∑–∞–º–µ—Ç–Ω–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("family_hormone_cancer");
    question6.setText("–ò–∑–≤–µ—Å—Ç–Ω–æ –ª–∏ –≤–∞–º –æ —Å–ª—É—á–∞—è—Ö –≥–æ—Ä–º–æ–Ω–æ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —É –±–ª–∏–∑–∫–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–∫ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã, –º–∞—Ç–∫–∏, —è–∏—á–Ω–∏–∫–æ–≤, –ø—Ä–æ—Å—Ç–∞—Ç—ã)?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–¥–∞", "–Ω–µ –∑–Ω–∞—é"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'menopause': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã "–ú—É–∂—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ"
  private List<Question> createMaleQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("urinary_symptoms");
    question1.setText("–°—Ç–∞–ª–∞ –ª–∏ —Å—Ç—Ä—É—è –º–æ—á–∏ —Å–ª–∞–±–µ–µ, —É—á–∞—Å—Ç–∏–ª–∏—Å—å –ª–∏ –Ω–æ—á–Ω—ã–µ –ø–æ–∑—ã–≤—ã?");
    question1.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("energy_libido_decline");
    question2.setText("–ó–∞–º–µ—á–∞–ª–∏ –ª–∏ –≤—ã —Å–Ω–∏–∂–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –ª–∏–±–∏–¥–æ –Ω–∞ —Ñ–æ–Ω–µ —Å—Ç—Ä–µ—Å—Å–∞?");
    question2.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "—Å–∏–ª—å–Ω–æ"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("prostate_discomfort");
    question3.setText("–°–ª—É—á–∞–µ—Ç—Å—è –ª–∏ —Ç—è–Ω—É—â–∞—è –±–æ–ª—å –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–æ—Å—Ç–∞—Ç—ã (–≤–Ω–∏–∑—É –∂–∏–≤–æ—Ç–∞/–ø—Ä–æ–º–µ–∂–Ω–æ—Å—Ç–∏)?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("male_hair_loss");
    question4.setText("–£—Å–∏–ª–∏–ª–æ—Å—å –ª–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–∞–¥–µ–Ω–∏–µ –≤–æ–ª–æ—Å?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–Ω–µ–º–Ω–æ–≥–æ", "–≤—ã—Ä–∞–∂–µ–Ω–Ω–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("recovery_time");
    question5.setText("–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞–≥—Ä—É–∑–æ–∫?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("red_meat_consumption");
    question6.setText("–ß–∞—Å—Ç–æ –ª–∏ –≤—ã –µ–¥–∏—Ç–µ –∫—Ä–∞—Å–Ω–æ–µ –º—è—Å–æ (–≥–æ–≤—è–¥–∏–Ω–∞/—Å–≤–∏–Ω–∏–Ω–∞)?");
    question6.setOptions(Arrays.asList("–Ω–∏–∫–æ–≥–¥–∞", "1-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é", "–∫–∞–∂–¥—ã–π –¥–µ–Ω—å"));
    questions.add(question6);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–º—ã 'male': " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }

  // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º
  private List<Question> createGeneralQuestions() {
    List<Question> questions = new ArrayList<>();
    
    Question question1 = new Question();
    question1.setId("fish_consumption");
    question1.setText("–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ —Ä—ã–±—É/–º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã?");
    question1.setOptions(Arrays.asList("–ø–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞", "—Ä–µ–∂–µ 1 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é", "1‚Äì2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é", "3+ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é"));
    questions.add(question1);
    
    Question question2 = new Question();
    question2.setId("coffee_daily");
    question2.setText("–°–∫–æ–ª—å–∫–æ —á–∞—à–µ–∫ –∫–æ—Ñ–µ –≤—ã –≤—ã–ø–∏–≤–∞–µ—Ç–µ –≤ –¥–µ–Ω—å?");
    question2.setOptions(Arrays.asList("0", "1", "2‚Äì3", "4+"));
    questions.add(question2);
    
    Question question3 = new Question();
    question3.setId("physical_activity");
    question3.setText("–ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏?");
    question3.setOptions(Arrays.asList("–Ω–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "1‚Äì2 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é", "3‚Äì4", "5+"));
    questions.add(question3);
    
    Question question4 = new Question();
    question4.setId("smoking_vaping");
    question4.setText("–ö—É—Ä–∏—Ç–µ –ª–∏ –≤—ã —Å–µ–π—á–∞—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤–µ–π–ø?");
    question4.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—Ä–µ–≥—É–ª—è—Ä–Ω–æ"));
    questions.add(question4);
    
    Question question5 = new Question();
    question5.setId("sweet_cravings");
    question5.setText("–ß–∞—Å—Ç–æ –ª–∏ –≤–∞—Å —Ç—è–Ω–µ—Ç –Ω–∞ —Å–ª–∞–¥–∫–æ–µ/—Ä–∞—Ñ–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã?");
    question5.setOptions(Arrays.asList("–Ω–µ—Ç", "—Ä–µ–¥–∫–æ", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question5);
    
    Question question6 = new Question();
    question6.setId("digestive_issues");
    question6.setText("–ë—ã–≤–∞–µ—Ç –ª–∏ –≤–∑–¥—É—Ç–∏–µ –∏–ª–∏ –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–π —Å—Ç—É–ª 3+ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é?");
    question6.setOptions(Arrays.asList("–Ω–µ—Ç", "–∏–Ω–æ–≥–¥–∞", "—á–∞—Å—Ç–æ"));
    questions.add(question6);
    
    Question question7 = new Question();
    question7.setId("cold_frequency");
    question7.setText("–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –±–æ–ª–µ–ª–∏ –û–†–í–ò/–ø—Ä–æ—Å—Ç—É–¥–æ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥?");
    question7.setOptions(Arrays.asList("0‚Äì1", "2‚Äì3", "4+"));
    questions.add(question7);
    
    System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω—ã –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã: " + questions.size() + " –≤–æ–ø—Ä–æ—Å–æ–≤");
    
    return questions;
  }
}

